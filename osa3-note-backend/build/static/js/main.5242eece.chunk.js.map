{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","App.js","index.js"],"names":["Note","_ref","note","toggleImportance","label","important","react_default","a","createElement","className","content","onClick","services_notes","axios","get","then","response","data","newObject","post","id","put","concat","Notification","message","App","_useState","useState","_useState2","Object","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","_useState7","_useState8","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","components_Notification","map","components_Note","key","find","n","changedNote","objectSpread","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","value","onChange","target","type","style","color","fontStyle","fontSize","ReactDOM","render","src_App","document","getElementById"],"mappings":"6MAWeA,EATF,SAAAC,GAAgC,IAA7BC,EAA6BD,EAA7BC,KAAMC,EAAuBF,EAAvBE,iBACdC,EAAQF,EAAKG,UAAY,qBAAuB,iBACtD,OACEC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QACXP,EAAKQ,QACNJ,EAAAC,EAAAC,cAAA,UAAQG,QAASR,GAAmBC,qBCW3BQ,EAfA,WAEb,OADgBC,IAAMC,IAHR,cAICC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAa5BL,EAVA,SAAAM,GAEb,OADgBL,IAAMM,KARR,aAQsBD,GACrBH,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAQ5BL,EALA,SAACQ,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,GAAAC,OAbF,aAaE,KAAAA,OAAwBF,GAAMF,GAC/BH,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QCL5BM,EARM,SAAAtB,GAAiB,IAAduB,EAAcvB,EAAduB,QACtB,OAAgB,OAAZA,EACK,KAGFlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASe,IC6FlBC,EA9FH,WAAM,IAAAC,EACUC,mBAAS,IADnBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACTK,EADSH,EAAA,GACFI,EADEJ,EAAA,GAAAK,EAEcN,mBAAS,wBAFvBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAETE,EAFSD,EAAA,GAEAE,EAFAF,EAAA,GAAAG,EAGcV,oBAAS,GAHvBW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGTE,EAHSD,EAAA,GAGAE,EAHAF,EAAA,GAAAG,EAIwBd,mBAAS,MAJjCe,EAAAb,OAAAC,EAAA,EAAAD,CAAAY,EAAA,GAITE,EAJSD,EAAA,GAIKE,EAJLF,EAAA,GAMhBG,oBAAU,WACRC,IAAqB/B,KAAK,SAAAgC,GACxBf,EAASe,MAEV,IAEH,IAAMC,EAAcT,EAAUR,EAAQA,EAAMkB,OAAO,SAAA/C,GAAI,OAAIA,EAAKG,YA6DhE,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,2BAEAF,EAAAC,EAAAC,cAAC0C,EAAD,CAAc1B,QAASmB,IAEvBrC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQG,QAAS,kBAAM6B,GAAYD,KAAnC,eACSA,EAAU,qBAAiB,WAGtCjC,EAAAC,EAAAC,cAAA,UAnDFwC,EAAYG,IAAI,SAAAjD,GAAI,OAClBI,EAAAC,EAAAC,cAAC4C,EAAD,CACEC,IAAKnD,EAAKkB,GACVlB,KAAMA,EACNC,iBAAkB,kBAvBG,SAAAiB,GACzB,IAAMlB,EAAO6B,EAAMuB,KAAK,SAAAC,GAAC,OAAIA,EAAEnC,KAAOA,IAChCoC,EAAW3B,OAAA4B,EAAA,EAAA5B,CAAA,GAAQ3B,EAAR,CAAcG,WAAYH,EAAKG,YAEhDyC,EACU1B,EAAIoC,GACXzC,KAAK,SAAA2C,GACJ1B,EAASD,EAAMoB,IAAI,SAAAjD,GAAI,OAAKA,EAAKkB,KAAOA,EAAKlB,EAAOwD,OAErDC,MAAM,SAAAC,GACLhB,EAAe,iBAAAtB,OAAkBpB,EAAKQ,QAAvB,4BACfmD,WAAW,WACTjB,EAAgB,OACf,KACHZ,EAASD,EAAMkB,OAAO,SAAAM,GAAC,OAAIA,EAAEnC,KAAOA,OASZ0C,CAAmB5D,EAAKkB,UAgDlDd,EAAAC,EAAAC,cAAA,QAAMuD,SA5CM,SAAAC,GACdA,EAAMC,iBACN,IAAMC,EAAa,CACjBxD,QAASyB,EACTgC,MAAM,IAAIC,MAAOC,cACjBhE,UAAWiE,KAAKC,SAAW,IAE7BzB,EAAmBoB,GAAYnD,KAAK,SAAA2C,GAClC1B,EAASD,EAAMT,OAAOoC,IACtBtB,EAAW,QAoCT9B,EAAAC,EAAAC,cAAA,SAAOgE,MAAOrC,EAASsC,SAhCJ,SAAAT,GACvB5B,EAAW4B,EAAMU,OAAOF,UAgCpBlE,EAAAC,EAAAC,cAAA,UAAQmE,KAAK,UAAb,aAEFrE,EAAAC,EAAAC,cA/BW,WAOb,OACEF,EAAAC,EAAAC,cAAA,OAAKoE,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKRzE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,6DAqBF,cC1FNwE,IAASC,OAAO3E,EAAAC,EAAAC,cAAC0E,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.5242eece.chunk.js","sourcesContent":["import React from 'react';\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? 'make not important' : 'make important';\n  return (\n    <li className=\"note\">\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  );\n};\nexport default Note;\n","import axios from 'axios';\nconst baseUrl = '/api/notes';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then(response => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n};\n\nexport default { getAll, create, update };\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className=\"error\">{message}</div>;\n};\n\nexport default Notification;","import React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport noteService from './services/notes';\nimport axios from 'axios';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('uusi muistiinpano...');\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    noteService.getAll().then(initialNotes => {\n      setNotes(initialNotes);\n    });\n  }, []);\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => (note.id !== id ? note : returnedNote)));\n      })\n      .catch(error => {\n        setErrorMessage(`muistiinpano '${note.content} poistettu palvelimelta`);\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n        setNotes(notes.filter(n => n.id !== id));\n      });\n  };\n\n  const rows = () =>\n    notesToShow.map(note => (\n      <Note\n        key={note.id}\n        note={note}\n        toggleImportance={() => toggleImportanceOf(note.id)}\n      />\n    ));\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5\n    };\n    noteService.create(noteObject).then(returnedNote => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote('');\n    });\n  };\n\n  const handleNoteChange = event => {\n    setNewNote(event.target.value);\n  };\n\n  const Footer = () => {\n    const footerStyle = {\n      color: 'green',\n      fontStyle: 'italic',\n      fontSize: 16\n    };\n\n    return (\n      <div style={footerStyle}>\n        <br />\n        <em>Note app, Department of Computer Science 2019</em>\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <h1>Muistiinpanot</h1>\n\n      <Notification message={errorMessage} />\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          n채yt채 {showAll ? 'vain t채rke채t' : 'kaikki'}\n        </button>\n      </div>\n      <ul>{rows()}</ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">tallenna</button>\n      </form>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}